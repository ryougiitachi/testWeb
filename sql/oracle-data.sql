--为用户新建表空间
--oracle分为“表段区块”四层逻辑(table/segment/extent/block)，表空间是唯一对应磁盘文件的逻辑层次，一个表空间可以对应不同的文件而一个文件只能属于一个表空间。
--ORACLE分区策略早先为数据字典管理模式DMT，已过时，现在默认为本地管理模式LMT。
--SEGMENT SPACE MANAGEMENT AUTO，临时表空间不能用自动段管理，用了会报错
--参考文章：http://blog.sina.com.cn/s/blog_3cae66560102w0vk.html
--临时表空间
CREATE TEMPORARY TABLESPACE TBS_MYBATIS_TMP 
	TEMPFILE 'D:\Database\Oracle\11.1.0\oradb01/TBS_MYBATIS_TMP.DBF' 
	SIZE 128M 
	AUTOEXTEND ON 
	NEXT 32M MAXSIZE 512M 
	EXTENT MANAGEMENT LOCAL;
--数据表空间
CREATE TABLESPACE TBS_MYBATIS_DATA 
	LOGGING
	DATAFILE 'D:\Database\Oracle\11.1.0\oradb01/TBS_MYBATIS_DATA.DBF'
--	PERMANENT
	SIZE 128M
	AUTOEXTEND ON
	NEXT 32M MAXSIZE UNLIMITED
	EXTENT MANAGEMENT LOCAL
	SEGMENT SPACE MANAGEMENT AUTO;
--索引表空间
CREATE TABLESPACE TBS_MYBATIS_IDX 
	LOGGING
	DATAFILE 'D:\Database\Oracle\11.1.0\oradb01/TBS_MYBATIS_IDX.DBF'
--	PERMANENT
	SIZE 128M
	AUTOEXTEND ON
	NEXT 32M MAXSIZE UNLIMITED
	EXTENT MANAGEMENT LOCAL
	SEGMENT SPACE MANAGEMENT AUTO;

--新建一个用户
CREATE USER MYBATIS IDENTIFIED BY oracle 
	ACCOUNT UNLOCK 
	DEFAULT TABLESPACE TBS_MYBATIS_DATA
	TEMPORARY TABLESPACE TBS_MYBATIS_TMP;

--为用户授权
GRANT CONNECT,RESOURCE TO MYBATIS;		--表示把 connect,resource权限授予news用户
GRANT DBA TO MYBATIS;					--表示把 dba权限授予给NEWUSER用户

/* ****************
 *	grant connect,resource to demo;   
 *	grant create any sequence to demo;  
 *	grant create any table to demo;  
 *	grant delete any table to demo;  
 *	grant insert any table to demo;  
 *	grant select any table to demo;  
 *	grant unlimited tablespace to demo;  
 *	grant execute any procedure to demo;  
 *	grant update any table to demo;  
 *	grant create any view to demo;  
 ********* */
ALTER USER SCOTT ACCOUNT UNLOCK;
ALTER USER SCOTT IDENTIFIED BY TIGER;



--T_USER
--对于大数据量表要用表分区，oracle表分区语法与mysql有差别，postgresql暂不直接支持表分区
--默认情况下，在分区表上建索引会自动建一个全局索引，为避免此情况可以建唯一本地分区索引(在主键上新建本地分区所有有一个问题待确定)
CREATE TABLE T_USER(
	USER_ID	NUMBER,
	USERNAME VARCHAR2(50),
	USER_STATUS NUMBER(1),
	INSERT_TIME DATE,
	UPDATE_TIME DATE,
	ACCESS_TIME DATE 
)
TABLESPACE TBS_MYBATIS_DATA;

ALTER TABLE T_USER ADD CONSTRAINT PK_USER PRIMARY KEY(USER_ID) USING INDEX TABLESPACE TBS_MYBATIS_IDX;
ALTER TABLE T_USER MODIFY USERNAME CONSTRAINT CHK_NN_T_USER_USERNAME NOT NULL;
ALTER TABLE T_USER MODIFY USER_STATUS CONSTRAINT CHK_NN_T_USER_USERSTATUS NOT NULL;
ALTER TABLE T_USER MODIFY INSERT_TIME CONSTRAINT CHK_NN_T_USER_INSERTTIME NOT NULL;
ALTER TABLE T_USER MODIFY UPDATE_TIME CONSTRAINT CHK_NN_T_USER_UPDATETIME NOT NULL;

CREATE INDEX IDX_USER_INSERT_TIME ON T_USER(INSERT_TIME) TABLESPACE TBS_MYBATIS_IDX;


CREATE SEQUENCE SEQ_USER_ID INCREMENT BY 1 MINVALUE 1 NOMAXVALUE START WITH 2 CACHE 5 NOCYCLE;

--分区的情况
CREATE TABLE T_USER(
	USER_ID	NUMBER,
	PARTITION_ID NUMBER(),
	USERNAME VARCHAR2(50),
	USER_STATUS NUMBER(1),
	INSERT_TIME DATE,
	UPDATE_TIME DATE,
	ACCESS_TIME DATE 
)
PARTITION BY RANGE(PARTITION_ID) (
	PAR_T_USER_00 LESS THAN (1) TABLESPACE TBS_MYBATIS_DATA00,
	--
	PAR_T_USER_99 LESS THAN (MAXVALUE) TABLESPACE TBS_MYBATIS_DATA99
);
ALTER TABLE USER ADD CONSTRAINT PK_USER PRIMARY KEY(USER_ID, PARTITION_ID) USING INDEX LOCAL(
	PARTITION PAR_PK_USER00 TABLESPACE TBS_MYBATIS_IDX00, 
	--
	PARTITION PAR_PK_USER99 TABLESPACE TBS_MYBATIS_IDX99 
);
--如果需要建全局索引把local替换成global  partition by range(saleprice)，并且在分区信息中要加上less than

--INSERT INTO T_USER VALUES(SEQ_USER_ID.NEXT_VAL, 'ARCHER', 0, SYSDATE, SYSDATE, SYSDATE);



--T_BANK_CITY
CREATE TABLE T_BANK_CITY(
	"ID" NUMBER(10) CONSTRAINT NN_BANK_CITY_ID NOT NULL ENABLE, 
	"CODE" VARCHAR2(20) CONSTRAINT NN_BANK_CITY_CODE NOT NULL ENABLE, 
	"NAME" VARCHAR2(50) CONSTRAINT NN_BANK_CITY_NAME NOT NULL ENABLE, 
	"STATUS" VARCHAR2(1) CONSTRAINT NN_BANK_CITY_STATUS NOT NULL ENABLE, 
	"CREATOR" VARCHAR2(50) CONSTRAINT NN_BANK_CITY_CREATOR NOT NULL ENABLE, 
	"INSERT_TIME" DATE DEFAULT SYSDATE CONSTRAINT NN_BANK_CITY_INSERTTIME NOT NULL ENABLE, 
	"EDITOR" VARCHAR2(50) CONSTRAINT NN_BANK_CITY_EDITOR NOT NULL ENABLE, 
	"UPDATE_TIME" DATE DEFAULT SYSDATE CONSTRAINT NN_BANK_CITY_UPDATETIME NOT NULL ENABLE, 
	CONSTRAINT PK_BANK_CITY PRIMARY KEY(ID) USING INDEX TABLESPACE TBS_MYBATIS_IDX
)
TABLESPACE TBS_MYBATIS_DATA;

ALTER TABLE T_BANK_CITY ADD CONSTRAINT UC_BANK_CITY_CODE UNIQUE(CODE) USING INDEX TABLESPACE TBS_MYBATIS_IDX;
ALTER TABLE T_BANK_CITY ADD CONSTRAINT CHK_BANK_CITY_STATUS CHECK STATUS IN ('1', '2', 'A', 'N', 'a', 'n');

CREATE SEQUENCE SEQ_BANK_CITY_ID INCREMENT BY 1 MINVALUE 1 NOMAXVALUE START WITH 49 CACHE 10 NOCYCLE;
